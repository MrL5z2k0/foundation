/*
 * This file is generated by jOOQ.
 */
package com.wuda.foundation.jooq.code.generation.commons.tables.records;


import com.wuda.foundation.jooq.code.generation.commons.tables.Task;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UByte;
import org.jooq.types.ULong;


/**
 * 任务
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskRecord extends UpdatableRecordImpl<TaskRecord> implements Record7<ULong, UByte, LocalDateTime, ULong, LocalDateTime, ULong, ULong> {

    private static final long serialVersionUID = -1300680557;

    /**
     * Setter for <code>foundation_commons.task.task_id</code>.
     */
    public void setTaskId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>foundation_commons.task.task_id</code>.
     */
    public ULong getTaskId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>foundation_commons.task.type</code>. 任务类型
     */
    public void setType(UByte value) {
        set(1, value);
    }

    /**
     * Getter for <code>foundation_commons.task.type</code>. 任务类型
     */
    public UByte getType() {
        return (UByte) get(1);
    }

    /**
     * Setter for <code>foundation_commons.task.create_time</code>.
     */
    public void setCreateTime(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>foundation_commons.task.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>foundation_commons.task.create_user_id</code>.
     */
    public void setCreateUserId(ULong value) {
        set(3, value);
    }

    /**
     * Getter for <code>foundation_commons.task.create_user_id</code>.
     */
    public ULong getCreateUserId() {
        return (ULong) get(3);
    }

    /**
     * Setter for <code>foundation_commons.task.last_modify_time</code>.
     */
    public void setLastModifyTime(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>foundation_commons.task.last_modify_time</code>.
     */
    public LocalDateTime getLastModifyTime() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>foundation_commons.task.last_modify_user_id</code>.
     */
    public void setLastModifyUserId(ULong value) {
        set(5, value);
    }

    /**
     * Getter for <code>foundation_commons.task.last_modify_user_id</code>.
     */
    public ULong getLastModifyUserId() {
        return (ULong) get(5);
    }

    /**
     * Setter for <code>foundation_commons.task.is_deleted</code>.
     */
    public void setIsDeleted(ULong value) {
        set(6, value);
    }

    /**
     * Getter for <code>foundation_commons.task.is_deleted</code>.
     */
    public ULong getIsDeleted() {
        return (ULong) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<ULong, UByte, LocalDateTime, ULong, LocalDateTime, ULong, ULong> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<ULong, UByte, LocalDateTime, ULong, LocalDateTime, ULong, ULong> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return Task.TASK.TASK_ID;
    }

    @Override
    public Field<UByte> field2() {
        return Task.TASK.TYPE;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Task.TASK.CREATE_TIME;
    }

    @Override
    public Field<ULong> field4() {
        return Task.TASK.CREATE_USER_ID;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Task.TASK.LAST_MODIFY_TIME;
    }

    @Override
    public Field<ULong> field6() {
        return Task.TASK.LAST_MODIFY_USER_ID;
    }

    @Override
    public Field<ULong> field7() {
        return Task.TASK.IS_DELETED;
    }

    @Override
    public ULong component1() {
        return getTaskId();
    }

    @Override
    public UByte component2() {
        return getType();
    }

    @Override
    public LocalDateTime component3() {
        return getCreateTime();
    }

    @Override
    public ULong component4() {
        return getCreateUserId();
    }

    @Override
    public LocalDateTime component5() {
        return getLastModifyTime();
    }

    @Override
    public ULong component6() {
        return getLastModifyUserId();
    }

    @Override
    public ULong component7() {
        return getIsDeleted();
    }

    @Override
    public ULong value1() {
        return getTaskId();
    }

    @Override
    public UByte value2() {
        return getType();
    }

    @Override
    public LocalDateTime value3() {
        return getCreateTime();
    }

    @Override
    public ULong value4() {
        return getCreateUserId();
    }

    @Override
    public LocalDateTime value5() {
        return getLastModifyTime();
    }

    @Override
    public ULong value6() {
        return getLastModifyUserId();
    }

    @Override
    public ULong value7() {
        return getIsDeleted();
    }

    @Override
    public TaskRecord value1(ULong value) {
        setTaskId(value);
        return this;
    }

    @Override
    public TaskRecord value2(UByte value) {
        setType(value);
        return this;
    }

    @Override
    public TaskRecord value3(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public TaskRecord value4(ULong value) {
        setCreateUserId(value);
        return this;
    }

    @Override
    public TaskRecord value5(LocalDateTime value) {
        setLastModifyTime(value);
        return this;
    }

    @Override
    public TaskRecord value6(ULong value) {
        setLastModifyUserId(value);
        return this;
    }

    @Override
    public TaskRecord value7(ULong value) {
        setIsDeleted(value);
        return this;
    }

    @Override
    public TaskRecord values(ULong value1, UByte value2, LocalDateTime value3, ULong value4, LocalDateTime value5, ULong value6, ULong value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TaskRecord
     */
    public TaskRecord() {
        super(Task.TASK);
    }

    /**
     * Create a detached, initialised TaskRecord
     */
    public TaskRecord(ULong taskId, UByte type, LocalDateTime createTime, ULong createUserId, LocalDateTime lastModifyTime, ULong lastModifyUserId, ULong isDeleted) {
        super(Task.TASK);

        set(0, taskId);
        set(1, type);
        set(2, createTime);
        set(3, createUserId);
        set(4, lastModifyTime);
        set(5, lastModifyUserId);
        set(6, isDeleted);
    }
}
