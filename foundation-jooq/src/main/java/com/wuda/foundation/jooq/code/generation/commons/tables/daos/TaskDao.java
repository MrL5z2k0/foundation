/*
 * This file is generated by jOOQ.
 */
package com.wuda.foundation.jooq.code.generation.commons.tables.daos;


import com.wuda.foundation.jooq.code.generation.commons.tables.Task;
import com.wuda.foundation.jooq.code.generation.commons.tables.records.TaskRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UByte;
import org.jooq.types.ULong;


/**
 * 任务
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskDao extends DAOImpl<TaskRecord, com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Task, ULong> {

    /**
     * Create a new TaskDao without any configuration
     */
    public TaskDao() {
        super(Task.TASK, com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Task.class);
    }

    /**
     * Create a new TaskDao with an attached configuration
     */
    public TaskDao(Configuration configuration) {
        super(Task.TASK, com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Task.class, configuration);
    }

    @Override
    public ULong getId(com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Task object) {
        return object.getTaskId();
    }

    /**
     * Fetch records that have <code>task_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Task> fetchRangeOfTaskId(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(Task.TASK.TASK_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>task_id IN (values)</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Task> fetchByTaskId(ULong... values) {
        return fetch(Task.TASK.TASK_ID, values);
    }

    /**
     * Fetch a unique record that has <code>task_id = value</code>
     */
    public com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Task fetchOneByTaskId(ULong value) {
        return fetchOne(Task.TASK.TASK_ID, value);
    }

    /**
     * Fetch records that have <code>type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Task> fetchRangeOfType(UByte lowerInclusive, UByte upperInclusive) {
        return fetchRange(Task.TASK.TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Task> fetchByType(UByte... values) {
        return fetch(Task.TASK.TYPE, values);
    }

    /**
     * Fetch records that have <code>create_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Task> fetchRangeOfCreateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Task.TASK.CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Task> fetchByCreateTime(LocalDateTime... values) {
        return fetch(Task.TASK.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>create_user_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Task> fetchRangeOfCreateUserId(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(Task.TASK.CREATE_USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_user_id IN (values)</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Task> fetchByCreateUserId(ULong... values) {
        return fetch(Task.TASK.CREATE_USER_ID, values);
    }

    /**
     * Fetch records that have <code>last_modify_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Task> fetchRangeOfLastModifyTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Task.TASK.LAST_MODIFY_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_modify_time IN (values)</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Task> fetchByLastModifyTime(LocalDateTime... values) {
        return fetch(Task.TASK.LAST_MODIFY_TIME, values);
    }

    /**
     * Fetch records that have <code>last_modify_user_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Task> fetchRangeOfLastModifyUserId(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(Task.TASK.LAST_MODIFY_USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_modify_user_id IN (values)</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Task> fetchByLastModifyUserId(ULong... values) {
        return fetch(Task.TASK.LAST_MODIFY_USER_ID, values);
    }

    /**
     * Fetch records that have <code>is_deleted BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Task> fetchRangeOfIsDeleted(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(Task.TASK.IS_DELETED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_deleted IN (values)</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Task> fetchByIsDeleted(ULong... values) {
        return fetch(Task.TASK.IS_DELETED, values);
    }
}
