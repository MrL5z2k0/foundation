/*
 * This file is generated by jOOQ.
 */
package com.wuda.foundation.jooq.code.generation.commons.tables.records;


import com.wuda.foundation.jooq.code.generation.commons.tables.PropertyKey;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UByte;
import org.jooq.types.ULong;


/**
 * 属性的key
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PropertyKeyRecord extends UpdatableRecordImpl<PropertyKeyRecord> implements Record10<ULong, String, UByte, UByte, ULong, LocalDateTime, ULong, LocalDateTime, ULong, ULong> {

    private static final long serialVersionUID = -1314505909;

    /**
     * Setter for <code>foundation_commons.property_key.property_key_id</code>.
     */
    public void setPropertyKeyId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>foundation_commons.property_key.property_key_id</code>.
     */
    public ULong getPropertyKeyId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>foundation_commons.property_key.key</code>. 属性名
     */
    public void setKey(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>foundation_commons.property_key.key</code>. 属性名
     */
    public String getKey() {
        return (String) get(1);
    }

    /**
     * Setter for <code>foundation_commons.property_key.type</code>. 属性的类型，比如最常用的就是“字面量”类型；比如该属性表示图片，属性值保存图片的链接；比如该属性表示颜色，因为在一些应用中，可以使用调色盘选取颜色，或者在显示时，可以显示颜色，而不是白色这样的纯文本
     */
    public void setType(UByte value) {
        set(2, value);
    }

    /**
     * Getter for <code>foundation_commons.property_key.type</code>. 属性的类型，比如最常用的就是“字面量”类型；比如该属性表示图片，属性值保存图片的链接；比如该属性表示颜色，因为在一些应用中，可以使用调色盘选取颜色，或者在显示时，可以显示颜色，而不是白色这样的纯文本
     */
    public UByte getType() {
        return (UByte) get(2);
    }

    /**
     * Setter for <code>foundation_commons.property_key.owner_type</code>. 该属性的owner的类型
     */
    public void setOwnerType(UByte value) {
        set(3, value);
    }

    /**
     * Getter for <code>foundation_commons.property_key.owner_type</code>. 该属性的owner的类型
     */
    public UByte getOwnerType() {
        return (UByte) get(3);
    }

    /**
     * Setter for <code>foundation_commons.property_key.owner_identifier</code>. 该属性的owner的id
     */
    public void setOwnerIdentifier(ULong value) {
        set(4, value);
    }

    /**
     * Getter for <code>foundation_commons.property_key.owner_identifier</code>. 该属性的owner的id
     */
    public ULong getOwnerIdentifier() {
        return (ULong) get(4);
    }

    /**
     * Setter for <code>foundation_commons.property_key.create_time</code>.
     */
    public void setCreateTime(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>foundation_commons.property_key.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>foundation_commons.property_key.create_user_id</code>.
     */
    public void setCreateUserId(ULong value) {
        set(6, value);
    }

    /**
     * Getter for <code>foundation_commons.property_key.create_user_id</code>.
     */
    public ULong getCreateUserId() {
        return (ULong) get(6);
    }

    /**
     * Setter for <code>foundation_commons.property_key.last_modify_time</code>.
     */
    public void setLastModifyTime(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>foundation_commons.property_key.last_modify_time</code>.
     */
    public LocalDateTime getLastModifyTime() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>foundation_commons.property_key.last_modify_user_id</code>.
     */
    public void setLastModifyUserId(ULong value) {
        set(8, value);
    }

    /**
     * Getter for <code>foundation_commons.property_key.last_modify_user_id</code>.
     */
    public ULong getLastModifyUserId() {
        return (ULong) get(8);
    }

    /**
     * Setter for <code>foundation_commons.property_key.is_deleted</code>.
     */
    public void setIsDeleted(ULong value) {
        set(9, value);
    }

    /**
     * Getter for <code>foundation_commons.property_key.is_deleted</code>.
     */
    public ULong getIsDeleted() {
        return (ULong) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<ULong, String, UByte, UByte, ULong, LocalDateTime, ULong, LocalDateTime, ULong, ULong> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<ULong, String, UByte, UByte, ULong, LocalDateTime, ULong, LocalDateTime, ULong, ULong> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return PropertyKey.PROPERTY_KEY.PROPERTY_KEY_ID;
    }

    @Override
    public Field<String> field2() {
        return PropertyKey.PROPERTY_KEY.KEY;
    }

    @Override
    public Field<UByte> field3() {
        return PropertyKey.PROPERTY_KEY.TYPE;
    }

    @Override
    public Field<UByte> field4() {
        return PropertyKey.PROPERTY_KEY.OWNER_TYPE;
    }

    @Override
    public Field<ULong> field5() {
        return PropertyKey.PROPERTY_KEY.OWNER_IDENTIFIER;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return PropertyKey.PROPERTY_KEY.CREATE_TIME;
    }

    @Override
    public Field<ULong> field7() {
        return PropertyKey.PROPERTY_KEY.CREATE_USER_ID;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return PropertyKey.PROPERTY_KEY.LAST_MODIFY_TIME;
    }

    @Override
    public Field<ULong> field9() {
        return PropertyKey.PROPERTY_KEY.LAST_MODIFY_USER_ID;
    }

    @Override
    public Field<ULong> field10() {
        return PropertyKey.PROPERTY_KEY.IS_DELETED;
    }

    @Override
    public ULong component1() {
        return getPropertyKeyId();
    }

    @Override
    public String component2() {
        return getKey();
    }

    @Override
    public UByte component3() {
        return getType();
    }

    @Override
    public UByte component4() {
        return getOwnerType();
    }

    @Override
    public ULong component5() {
        return getOwnerIdentifier();
    }

    @Override
    public LocalDateTime component6() {
        return getCreateTime();
    }

    @Override
    public ULong component7() {
        return getCreateUserId();
    }

    @Override
    public LocalDateTime component8() {
        return getLastModifyTime();
    }

    @Override
    public ULong component9() {
        return getLastModifyUserId();
    }

    @Override
    public ULong component10() {
        return getIsDeleted();
    }

    @Override
    public ULong value1() {
        return getPropertyKeyId();
    }

    @Override
    public String value2() {
        return getKey();
    }

    @Override
    public UByte value3() {
        return getType();
    }

    @Override
    public UByte value4() {
        return getOwnerType();
    }

    @Override
    public ULong value5() {
        return getOwnerIdentifier();
    }

    @Override
    public LocalDateTime value6() {
        return getCreateTime();
    }

    @Override
    public ULong value7() {
        return getCreateUserId();
    }

    @Override
    public LocalDateTime value8() {
        return getLastModifyTime();
    }

    @Override
    public ULong value9() {
        return getLastModifyUserId();
    }

    @Override
    public ULong value10() {
        return getIsDeleted();
    }

    @Override
    public PropertyKeyRecord value1(ULong value) {
        setPropertyKeyId(value);
        return this;
    }

    @Override
    public PropertyKeyRecord value2(String value) {
        setKey(value);
        return this;
    }

    @Override
    public PropertyKeyRecord value3(UByte value) {
        setType(value);
        return this;
    }

    @Override
    public PropertyKeyRecord value4(UByte value) {
        setOwnerType(value);
        return this;
    }

    @Override
    public PropertyKeyRecord value5(ULong value) {
        setOwnerIdentifier(value);
        return this;
    }

    @Override
    public PropertyKeyRecord value6(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public PropertyKeyRecord value7(ULong value) {
        setCreateUserId(value);
        return this;
    }

    @Override
    public PropertyKeyRecord value8(LocalDateTime value) {
        setLastModifyTime(value);
        return this;
    }

    @Override
    public PropertyKeyRecord value9(ULong value) {
        setLastModifyUserId(value);
        return this;
    }

    @Override
    public PropertyKeyRecord value10(ULong value) {
        setIsDeleted(value);
        return this;
    }

    @Override
    public PropertyKeyRecord values(ULong value1, String value2, UByte value3, UByte value4, ULong value5, LocalDateTime value6, ULong value7, LocalDateTime value8, ULong value9, ULong value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PropertyKeyRecord
     */
    public PropertyKeyRecord() {
        super(PropertyKey.PROPERTY_KEY);
    }

    /**
     * Create a detached, initialised PropertyKeyRecord
     */
    public PropertyKeyRecord(ULong propertyKeyId, String key, UByte type, UByte ownerType, ULong ownerIdentifier, LocalDateTime createTime, ULong createUserId, LocalDateTime lastModifyTime, ULong lastModifyUserId, ULong isDeleted) {
        super(PropertyKey.PROPERTY_KEY);

        set(0, propertyKeyId);
        set(1, key);
        set(2, type);
        set(3, ownerType);
        set(4, ownerIdentifier);
        set(5, createTime);
        set(6, createUserId);
        set(7, lastModifyTime);
        set(8, lastModifyUserId);
        set(9, isDeleted);
    }
}
