/*
 * This file is generated by jOOQ.
 */
package com.wuda.foundation.jooq.code.generation.commons.tables;


import com.wuda.foundation.jooq.code.generation.commons.FoundationCommons;
import com.wuda.foundation.jooq.code.generation.commons.Keys;
import com.wuda.foundation.jooq.code.generation.commons.tables.records.MenuItemRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * 可以代表站点的功能菜单中的一个具体功能，导航栏菜单（Navigation menu）中的一个具体项等等，这些item可能是按钮，链接等。参考Android的Menu，MenuItem，https://developer.android.com/reference/android/view/MenuItem。
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MenuItem extends TableImpl<MenuItemRecord> {

    private static final long serialVersionUID = 1424958889;

    /**
     * The reference instance of <code>foundation_commons.menu_item</code>
     */
    public static final MenuItem MENU_ITEM = new MenuItem();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MenuItemRecord> getRecordType() {
        return MenuItemRecord.class;
    }

    /**
     * The column <code>foundation_commons.menu_item.menu_item_id</code>.
     */
    public final TableField<MenuItemRecord, ULong> MENU_ITEM_ID = createField(DSL.name("menu_item_id"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>foundation_commons.menu_item.name</code>.
     */
    public final TableField<MenuItemRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>foundation_commons.menu_item.description</code>.
     */
    public final TableField<MenuItemRecord, String> DESCRIPTION = createField(DSL.name("description"), org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false), this, "");

    /**
     * The column <code>foundation_commons.menu_item.create_time</code>.
     */
    public final TableField<MenuItemRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>foundation_commons.menu_item.create_user_id</code>.
     */
    public final TableField<MenuItemRecord, ULong> CREATE_USER_ID = createField(DSL.name("create_user_id"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>foundation_commons.menu_item.last_modify_time</code>.
     */
    public final TableField<MenuItemRecord, LocalDateTime> LAST_MODIFY_TIME = createField(DSL.name("last_modify_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>foundation_commons.menu_item.last_modify_user_id</code>.
     */
    public final TableField<MenuItemRecord, ULong> LAST_MODIFY_USER_ID = createField(DSL.name("last_modify_user_id"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>foundation_commons.menu_item.is_deleted</code>.
     */
    public final TableField<MenuItemRecord, ULong> IS_DELETED = createField(DSL.name("is_deleted"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * Create a <code>foundation_commons.menu_item</code> table reference
     */
    public MenuItem() {
        this(DSL.name("menu_item"), null);
    }

    /**
     * Create an aliased <code>foundation_commons.menu_item</code> table reference
     */
    public MenuItem(String alias) {
        this(DSL.name(alias), MENU_ITEM);
    }

    /**
     * Create an aliased <code>foundation_commons.menu_item</code> table reference
     */
    public MenuItem(Name alias) {
        this(alias, MENU_ITEM);
    }

    private MenuItem(Name alias, Table<MenuItemRecord> aliased) {
        this(alias, aliased, null);
    }

    private MenuItem(Name alias, Table<MenuItemRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("可以代表站点的功能菜单中的一个具体功能，导航栏菜单（Navigation menu）中的一个具体项等等，这些item可能是按钮，链接等。参考Android的Menu，MenuItem，https://developer.android.com/reference/android/view/MenuItem。"), TableOptions.table());
    }

    public <O extends Record> MenuItem(Table<O> child, ForeignKey<O, MenuItemRecord> key) {
        super(child, key, MENU_ITEM);
    }

    @Override
    public Schema getSchema() {
        return FoundationCommons.FOUNDATION_COMMONS;
    }

    @Override
    public Identity<MenuItemRecord, ULong> getIdentity() {
        return Keys.IDENTITY_MENU_ITEM;
    }

    @Override
    public UniqueKey<MenuItemRecord> getPrimaryKey() {
        return Keys.KEY_MENU_ITEM_PRIMARY;
    }

    @Override
    public List<UniqueKey<MenuItemRecord>> getKeys() {
        return Arrays.<UniqueKey<MenuItemRecord>>asList(Keys.KEY_MENU_ITEM_PRIMARY);
    }

    @Override
    public MenuItem as(String alias) {
        return new MenuItem(DSL.name(alias), this);
    }

    @Override
    public MenuItem as(Name alias) {
        return new MenuItem(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MenuItem rename(String name) {
        return new MenuItem(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MenuItem rename(Name name) {
        return new MenuItem(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<ULong, String, String, LocalDateTime, ULong, LocalDateTime, ULong, ULong> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
