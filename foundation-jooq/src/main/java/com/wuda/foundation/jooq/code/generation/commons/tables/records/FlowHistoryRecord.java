/*
 * This file is generated by jOOQ.
 */
package com.wuda.foundation.jooq.code.generation.commons.tables.records;


import com.wuda.foundation.jooq.code.generation.commons.tables.FlowHistory;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UByte;
import org.jooq.types.ULong;


/**
 * 流程处理历史记录
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FlowHistoryRecord extends UpdatableRecordImpl<FlowHistoryRecord> implements Record11<ULong, UByte, UByte, UByte, UByte, String, LocalDateTime, ULong, LocalDateTime, ULong, ULong> {

    private static final long serialVersionUID = 1912067221;

    /**
     * Setter for <code>foundation_commons.flow_history.flow_history_id</code>.
     */
    public void setFlowHistoryId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>foundation_commons.flow_history.flow_history_id</code>.
     */
    public ULong getFlowHistoryId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>foundation_commons.flow_history.current_state</code>. 当前状态
     */
    public void setCurrentState(UByte value) {
        set(1, value);
    }

    /**
     * Getter for <code>foundation_commons.flow_history.current_state</code>. 当前状态
     */
    public UByte getCurrentState() {
        return (UByte) get(1);
    }

    /**
     * Setter for <code>foundation_commons.flow_history.event</code>. 触发状态变化的事件
     */
    public void setEvent(UByte value) {
        set(2, value);
    }

    /**
     * Getter for <code>foundation_commons.flow_history.event</code>. 触发状态变化的事件
     */
    public UByte getEvent() {
        return (UByte) get(2);
    }

    /**
     * Setter for <code>foundation_commons.flow_history.next_state</code>. 下一个状态
     */
    public void setNextState(UByte value) {
        set(3, value);
    }

    /**
     * Getter for <code>foundation_commons.flow_history.next_state</code>. 下一个状态
     */
    public UByte getNextState() {
        return (UByte) get(3);
    }

    /**
     * Setter for <code>foundation_commons.flow_history.flow_version</code>. 流程的版本
     */
    public void setFlowVersion(UByte value) {
        set(4, value);
    }

    /**
     * Getter for <code>foundation_commons.flow_history.flow_version</code>. 流程的版本
     */
    public UByte getFlowVersion() {
        return (UByte) get(4);
    }

    /**
     * Setter for <code>foundation_commons.flow_history.description</code>. 描述信息
     */
    public void setDescription(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>foundation_commons.flow_history.description</code>. 描述信息
     */
    public String getDescription() {
        return (String) get(5);
    }

    /**
     * Setter for <code>foundation_commons.flow_history.create_time</code>.
     */
    public void setCreateTime(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>foundation_commons.flow_history.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>foundation_commons.flow_history.create_user_id</code>.
     */
    public void setCreateUserId(ULong value) {
        set(7, value);
    }

    /**
     * Getter for <code>foundation_commons.flow_history.create_user_id</code>.
     */
    public ULong getCreateUserId() {
        return (ULong) get(7);
    }

    /**
     * Setter for <code>foundation_commons.flow_history.last_modify_time</code>.
     */
    public void setLastModifyTime(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>foundation_commons.flow_history.last_modify_time</code>.
     */
    public LocalDateTime getLastModifyTime() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>foundation_commons.flow_history.last_modify_user_id</code>.
     */
    public void setLastModifyUserId(ULong value) {
        set(9, value);
    }

    /**
     * Getter for <code>foundation_commons.flow_history.last_modify_user_id</code>.
     */
    public ULong getLastModifyUserId() {
        return (ULong) get(9);
    }

    /**
     * Setter for <code>foundation_commons.flow_history.is_deleted</code>.
     */
    public void setIsDeleted(ULong value) {
        set(10, value);
    }

    /**
     * Getter for <code>foundation_commons.flow_history.is_deleted</code>.
     */
    public ULong getIsDeleted() {
        return (ULong) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<ULong, UByte, UByte, UByte, UByte, String, LocalDateTime, ULong, LocalDateTime, ULong, ULong> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<ULong, UByte, UByte, UByte, UByte, String, LocalDateTime, ULong, LocalDateTime, ULong, ULong> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return FlowHistory.FLOW_HISTORY.FLOW_HISTORY_ID;
    }

    @Override
    public Field<UByte> field2() {
        return FlowHistory.FLOW_HISTORY.CURRENT_STATE;
    }

    @Override
    public Field<UByte> field3() {
        return FlowHistory.FLOW_HISTORY.EVENT;
    }

    @Override
    public Field<UByte> field4() {
        return FlowHistory.FLOW_HISTORY.NEXT_STATE;
    }

    @Override
    public Field<UByte> field5() {
        return FlowHistory.FLOW_HISTORY.FLOW_VERSION;
    }

    @Override
    public Field<String> field6() {
        return FlowHistory.FLOW_HISTORY.DESCRIPTION;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return FlowHistory.FLOW_HISTORY.CREATE_TIME;
    }

    @Override
    public Field<ULong> field8() {
        return FlowHistory.FLOW_HISTORY.CREATE_USER_ID;
    }

    @Override
    public Field<LocalDateTime> field9() {
        return FlowHistory.FLOW_HISTORY.LAST_MODIFY_TIME;
    }

    @Override
    public Field<ULong> field10() {
        return FlowHistory.FLOW_HISTORY.LAST_MODIFY_USER_ID;
    }

    @Override
    public Field<ULong> field11() {
        return FlowHistory.FLOW_HISTORY.IS_DELETED;
    }

    @Override
    public ULong component1() {
        return getFlowHistoryId();
    }

    @Override
    public UByte component2() {
        return getCurrentState();
    }

    @Override
    public UByte component3() {
        return getEvent();
    }

    @Override
    public UByte component4() {
        return getNextState();
    }

    @Override
    public UByte component5() {
        return getFlowVersion();
    }

    @Override
    public String component6() {
        return getDescription();
    }

    @Override
    public LocalDateTime component7() {
        return getCreateTime();
    }

    @Override
    public ULong component8() {
        return getCreateUserId();
    }

    @Override
    public LocalDateTime component9() {
        return getLastModifyTime();
    }

    @Override
    public ULong component10() {
        return getLastModifyUserId();
    }

    @Override
    public ULong component11() {
        return getIsDeleted();
    }

    @Override
    public ULong value1() {
        return getFlowHistoryId();
    }

    @Override
    public UByte value2() {
        return getCurrentState();
    }

    @Override
    public UByte value3() {
        return getEvent();
    }

    @Override
    public UByte value4() {
        return getNextState();
    }

    @Override
    public UByte value5() {
        return getFlowVersion();
    }

    @Override
    public String value6() {
        return getDescription();
    }

    @Override
    public LocalDateTime value7() {
        return getCreateTime();
    }

    @Override
    public ULong value8() {
        return getCreateUserId();
    }

    @Override
    public LocalDateTime value9() {
        return getLastModifyTime();
    }

    @Override
    public ULong value10() {
        return getLastModifyUserId();
    }

    @Override
    public ULong value11() {
        return getIsDeleted();
    }

    @Override
    public FlowHistoryRecord value1(ULong value) {
        setFlowHistoryId(value);
        return this;
    }

    @Override
    public FlowHistoryRecord value2(UByte value) {
        setCurrentState(value);
        return this;
    }

    @Override
    public FlowHistoryRecord value3(UByte value) {
        setEvent(value);
        return this;
    }

    @Override
    public FlowHistoryRecord value4(UByte value) {
        setNextState(value);
        return this;
    }

    @Override
    public FlowHistoryRecord value5(UByte value) {
        setFlowVersion(value);
        return this;
    }

    @Override
    public FlowHistoryRecord value6(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public FlowHistoryRecord value7(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public FlowHistoryRecord value8(ULong value) {
        setCreateUserId(value);
        return this;
    }

    @Override
    public FlowHistoryRecord value9(LocalDateTime value) {
        setLastModifyTime(value);
        return this;
    }

    @Override
    public FlowHistoryRecord value10(ULong value) {
        setLastModifyUserId(value);
        return this;
    }

    @Override
    public FlowHistoryRecord value11(ULong value) {
        setIsDeleted(value);
        return this;
    }

    @Override
    public FlowHistoryRecord values(ULong value1, UByte value2, UByte value3, UByte value4, UByte value5, String value6, LocalDateTime value7, ULong value8, LocalDateTime value9, ULong value10, ULong value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FlowHistoryRecord
     */
    public FlowHistoryRecord() {
        super(FlowHistory.FLOW_HISTORY);
    }

    /**
     * Create a detached, initialised FlowHistoryRecord
     */
    public FlowHistoryRecord(ULong flowHistoryId, UByte currentState, UByte event, UByte nextState, UByte flowVersion, String description, LocalDateTime createTime, ULong createUserId, LocalDateTime lastModifyTime, ULong lastModifyUserId, ULong isDeleted) {
        super(FlowHistory.FLOW_HISTORY);

        set(0, flowHistoryId);
        set(1, currentState);
        set(2, event);
        set(3, nextState);
        set(4, flowVersion);
        set(5, description);
        set(6, createTime);
        set(7, createUserId);
        set(8, lastModifyTime);
        set(9, lastModifyUserId);
        set(10, isDeleted);
    }
}
