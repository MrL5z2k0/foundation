/*
 * This file is generated by jOOQ.
 */
package com.wuda.foundation.jooq.code.generation.commons.tables.records;


import com.wuda.foundation.jooq.code.generation.commons.tables.MenuItemCategory;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UByte;
import org.jooq.types.ULong;


/**
 * 物品分类
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MenuItemCategoryRecord extends UpdatableRecordImpl<MenuItemCategoryRecord> implements Record12<ULong, ULong, ULong, ULong, UByte, String, String, LocalDateTime, ULong, LocalDateTime, ULong, ULong> {

    private static final long serialVersionUID = -2096583062;

    /**
     * Setter for <code>foundation_commons.menu_item_category.menu_item_category_id</code>. identifier
     */
    public void setMenuItemCategoryId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>foundation_commons.menu_item_category.menu_item_category_id</code>. identifier
     */
    public ULong getMenuItemCategoryId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>foundation_commons.menu_item_category.menu_id</code>. 一个分类只能属于一个菜单，即使多个菜单之间很相似，但是也还是各自维护，以免造成不必要的数据之间相互影响，导致维护起来会很麻烦。
     */
    public void setMenuId(ULong value) {
        set(1, value);
    }

    /**
     * Getter for <code>foundation_commons.menu_item_category.menu_id</code>. 一个分类只能属于一个菜单，即使多个菜单之间很相似，但是也还是各自维护，以免造成不必要的数据之间相互影响，导致维护起来会很麻烦。
     */
    public ULong getMenuId() {
        return (ULong) get(1);
    }

    /**
     * Setter for <code>foundation_commons.menu_item_category.parent_menu_item_category_id</code>. 父节点ID
     */
    public void setParentMenuItemCategoryId(ULong value) {
        set(2, value);
    }

    /**
     * Getter for <code>foundation_commons.menu_item_category.parent_menu_item_category_id</code>. 父节点ID
     */
    public ULong getParentMenuItemCategoryId() {
        return (ULong) get(2);
    }

    /**
     * Setter for <code>foundation_commons.menu_item_category.root_menu_item_category_id</code>.
     */
    public void setRootMenuItemCategoryId(ULong value) {
        set(3, value);
    }

    /**
     * Getter for <code>foundation_commons.menu_item_category.root_menu_item_category_id</code>.
     */
    public ULong getRootMenuItemCategoryId() {
        return (ULong) get(3);
    }

    /**
     * Setter for <code>foundation_commons.menu_item_category.depth</code>. depth
     */
    public void setDepth(UByte value) {
        set(4, value);
    }

    /**
     * Getter for <code>foundation_commons.menu_item_category.depth</code>. depth
     */
    public UByte getDepth() {
        return (UByte) get(4);
    }

    /**
     * Setter for <code>foundation_commons.menu_item_category.name</code>. 分类名称
     */
    public void setName(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>foundation_commons.menu_item_category.name</code>. 分类名称
     */
    public String getName() {
        return (String) get(5);
    }

    /**
     * Setter for <code>foundation_commons.menu_item_category.description</code>. 描述
     */
    public void setDescription(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>foundation_commons.menu_item_category.description</code>. 描述
     */
    public String getDescription() {
        return (String) get(6);
    }

    /**
     * Setter for <code>foundation_commons.menu_item_category.create_time</code>.
     */
    public void setCreateTime(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>foundation_commons.menu_item_category.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>foundation_commons.menu_item_category.create_user_id</code>.
     */
    public void setCreateUserId(ULong value) {
        set(8, value);
    }

    /**
     * Getter for <code>foundation_commons.menu_item_category.create_user_id</code>.
     */
    public ULong getCreateUserId() {
        return (ULong) get(8);
    }

    /**
     * Setter for <code>foundation_commons.menu_item_category.last_modify_time</code>.
     */
    public void setLastModifyTime(LocalDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>foundation_commons.menu_item_category.last_modify_time</code>.
     */
    public LocalDateTime getLastModifyTime() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>foundation_commons.menu_item_category.last_modify_user_id</code>.
     */
    public void setLastModifyUserId(ULong value) {
        set(10, value);
    }

    /**
     * Getter for <code>foundation_commons.menu_item_category.last_modify_user_id</code>.
     */
    public ULong getLastModifyUserId() {
        return (ULong) get(10);
    }

    /**
     * Setter for <code>foundation_commons.menu_item_category.is_deleted</code>.
     */
    public void setIsDeleted(ULong value) {
        set(11, value);
    }

    /**
     * Getter for <code>foundation_commons.menu_item_category.is_deleted</code>.
     */
    public ULong getIsDeleted() {
        return (ULong) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<ULong, ULong, ULong, ULong, UByte, String, String, LocalDateTime, ULong, LocalDateTime, ULong, ULong> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<ULong, ULong, ULong, ULong, UByte, String, String, LocalDateTime, ULong, LocalDateTime, ULong, ULong> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return MenuItemCategory.MENU_ITEM_CATEGORY.MENU_ITEM_CATEGORY_ID;
    }

    @Override
    public Field<ULong> field2() {
        return MenuItemCategory.MENU_ITEM_CATEGORY.MENU_ID;
    }

    @Override
    public Field<ULong> field3() {
        return MenuItemCategory.MENU_ITEM_CATEGORY.PARENT_MENU_ITEM_CATEGORY_ID;
    }

    @Override
    public Field<ULong> field4() {
        return MenuItemCategory.MENU_ITEM_CATEGORY.ROOT_MENU_ITEM_CATEGORY_ID;
    }

    @Override
    public Field<UByte> field5() {
        return MenuItemCategory.MENU_ITEM_CATEGORY.DEPTH;
    }

    @Override
    public Field<String> field6() {
        return MenuItemCategory.MENU_ITEM_CATEGORY.NAME;
    }

    @Override
    public Field<String> field7() {
        return MenuItemCategory.MENU_ITEM_CATEGORY.DESCRIPTION;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return MenuItemCategory.MENU_ITEM_CATEGORY.CREATE_TIME;
    }

    @Override
    public Field<ULong> field9() {
        return MenuItemCategory.MENU_ITEM_CATEGORY.CREATE_USER_ID;
    }

    @Override
    public Field<LocalDateTime> field10() {
        return MenuItemCategory.MENU_ITEM_CATEGORY.LAST_MODIFY_TIME;
    }

    @Override
    public Field<ULong> field11() {
        return MenuItemCategory.MENU_ITEM_CATEGORY.LAST_MODIFY_USER_ID;
    }

    @Override
    public Field<ULong> field12() {
        return MenuItemCategory.MENU_ITEM_CATEGORY.IS_DELETED;
    }

    @Override
    public ULong component1() {
        return getMenuItemCategoryId();
    }

    @Override
    public ULong component2() {
        return getMenuId();
    }

    @Override
    public ULong component3() {
        return getParentMenuItemCategoryId();
    }

    @Override
    public ULong component4() {
        return getRootMenuItemCategoryId();
    }

    @Override
    public UByte component5() {
        return getDepth();
    }

    @Override
    public String component6() {
        return getName();
    }

    @Override
    public String component7() {
        return getDescription();
    }

    @Override
    public LocalDateTime component8() {
        return getCreateTime();
    }

    @Override
    public ULong component9() {
        return getCreateUserId();
    }

    @Override
    public LocalDateTime component10() {
        return getLastModifyTime();
    }

    @Override
    public ULong component11() {
        return getLastModifyUserId();
    }

    @Override
    public ULong component12() {
        return getIsDeleted();
    }

    @Override
    public ULong value1() {
        return getMenuItemCategoryId();
    }

    @Override
    public ULong value2() {
        return getMenuId();
    }

    @Override
    public ULong value3() {
        return getParentMenuItemCategoryId();
    }

    @Override
    public ULong value4() {
        return getRootMenuItemCategoryId();
    }

    @Override
    public UByte value5() {
        return getDepth();
    }

    @Override
    public String value6() {
        return getName();
    }

    @Override
    public String value7() {
        return getDescription();
    }

    @Override
    public LocalDateTime value8() {
        return getCreateTime();
    }

    @Override
    public ULong value9() {
        return getCreateUserId();
    }

    @Override
    public LocalDateTime value10() {
        return getLastModifyTime();
    }

    @Override
    public ULong value11() {
        return getLastModifyUserId();
    }

    @Override
    public ULong value12() {
        return getIsDeleted();
    }

    @Override
    public MenuItemCategoryRecord value1(ULong value) {
        setMenuItemCategoryId(value);
        return this;
    }

    @Override
    public MenuItemCategoryRecord value2(ULong value) {
        setMenuId(value);
        return this;
    }

    @Override
    public MenuItemCategoryRecord value3(ULong value) {
        setParentMenuItemCategoryId(value);
        return this;
    }

    @Override
    public MenuItemCategoryRecord value4(ULong value) {
        setRootMenuItemCategoryId(value);
        return this;
    }

    @Override
    public MenuItemCategoryRecord value5(UByte value) {
        setDepth(value);
        return this;
    }

    @Override
    public MenuItemCategoryRecord value6(String value) {
        setName(value);
        return this;
    }

    @Override
    public MenuItemCategoryRecord value7(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public MenuItemCategoryRecord value8(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public MenuItemCategoryRecord value9(ULong value) {
        setCreateUserId(value);
        return this;
    }

    @Override
    public MenuItemCategoryRecord value10(LocalDateTime value) {
        setLastModifyTime(value);
        return this;
    }

    @Override
    public MenuItemCategoryRecord value11(ULong value) {
        setLastModifyUserId(value);
        return this;
    }

    @Override
    public MenuItemCategoryRecord value12(ULong value) {
        setIsDeleted(value);
        return this;
    }

    @Override
    public MenuItemCategoryRecord values(ULong value1, ULong value2, ULong value3, ULong value4, UByte value5, String value6, String value7, LocalDateTime value8, ULong value9, LocalDateTime value10, ULong value11, ULong value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MenuItemCategoryRecord
     */
    public MenuItemCategoryRecord() {
        super(MenuItemCategory.MENU_ITEM_CATEGORY);
    }

    /**
     * Create a detached, initialised MenuItemCategoryRecord
     */
    public MenuItemCategoryRecord(ULong menuItemCategoryId, ULong menuId, ULong parentMenuItemCategoryId, ULong rootMenuItemCategoryId, UByte depth, String name, String description, LocalDateTime createTime, ULong createUserId, LocalDateTime lastModifyTime, ULong lastModifyUserId, ULong isDeleted) {
        super(MenuItemCategory.MENU_ITEM_CATEGORY);

        set(0, menuItemCategoryId);
        set(1, menuId);
        set(2, parentMenuItemCategoryId);
        set(3, rootMenuItemCategoryId);
        set(4, depth);
        set(5, name);
        set(6, description);
        set(7, createTime);
        set(8, createUserId);
        set(9, lastModifyTime);
        set(10, lastModifyUserId);
        set(11, isDeleted);
    }
}
