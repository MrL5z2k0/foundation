/*
 * This file is generated by jOOQ.
 */
package com.wuda.foundation.jooq.code.generation.commons.tables.records;


import com.wuda.foundation.jooq.code.generation.commons.tables.MenuCore;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * 菜单核心信息。一个站点，可以制作多个菜单，比如为A场景制作一份菜单，为B场景制作一份菜单。每个菜单有它自己【独立的分类】，因为每个菜单的内容都不一样；但是最底层的菜单项是共享的，因为站点所能提供的功能是一致的，只是每个菜单组合了不同的功能而已。
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MenuCoreRecord extends UpdatableRecordImpl<MenuCoreRecord> implements Record7<ULong, ULong, LocalDateTime, ULong, LocalDateTime, ULong, ULong> {

    private static final long serialVersionUID = -1862569022;

    /**
     * Setter for <code>foundation_commons.menu_core.menu_core_id</code>.
     */
    public void setMenuCoreId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>foundation_commons.menu_core.menu_core_id</code>.
     */
    public ULong getMenuCoreId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>foundation_commons.menu_core.menu_id</code>.
     */
    public void setMenuId(ULong value) {
        set(1, value);
    }

    /**
     * Getter for <code>foundation_commons.menu_core.menu_id</code>.
     */
    public ULong getMenuId() {
        return (ULong) get(1);
    }

    /**
     * Setter for <code>foundation_commons.menu_core.create_time</code>.
     */
    public void setCreateTime(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>foundation_commons.menu_core.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>foundation_commons.menu_core.create_user_id</code>.
     */
    public void setCreateUserId(ULong value) {
        set(3, value);
    }

    /**
     * Getter for <code>foundation_commons.menu_core.create_user_id</code>.
     */
    public ULong getCreateUserId() {
        return (ULong) get(3);
    }

    /**
     * Setter for <code>foundation_commons.menu_core.last_modify_time</code>.
     */
    public void setLastModifyTime(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>foundation_commons.menu_core.last_modify_time</code>.
     */
    public LocalDateTime getLastModifyTime() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>foundation_commons.menu_core.last_modify_user_id</code>.
     */
    public void setLastModifyUserId(ULong value) {
        set(5, value);
    }

    /**
     * Getter for <code>foundation_commons.menu_core.last_modify_user_id</code>.
     */
    public ULong getLastModifyUserId() {
        return (ULong) get(5);
    }

    /**
     * Setter for <code>foundation_commons.menu_core.is_deleted</code>.
     */
    public void setIsDeleted(ULong value) {
        set(6, value);
    }

    /**
     * Getter for <code>foundation_commons.menu_core.is_deleted</code>.
     */
    public ULong getIsDeleted() {
        return (ULong) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<ULong, ULong, LocalDateTime, ULong, LocalDateTime, ULong, ULong> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<ULong, ULong, LocalDateTime, ULong, LocalDateTime, ULong, ULong> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return MenuCore.MENU_CORE.MENU_CORE_ID;
    }

    @Override
    public Field<ULong> field2() {
        return MenuCore.MENU_CORE.MENU_ID;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return MenuCore.MENU_CORE.CREATE_TIME;
    }

    @Override
    public Field<ULong> field4() {
        return MenuCore.MENU_CORE.CREATE_USER_ID;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return MenuCore.MENU_CORE.LAST_MODIFY_TIME;
    }

    @Override
    public Field<ULong> field6() {
        return MenuCore.MENU_CORE.LAST_MODIFY_USER_ID;
    }

    @Override
    public Field<ULong> field7() {
        return MenuCore.MENU_CORE.IS_DELETED;
    }

    @Override
    public ULong component1() {
        return getMenuCoreId();
    }

    @Override
    public ULong component2() {
        return getMenuId();
    }

    @Override
    public LocalDateTime component3() {
        return getCreateTime();
    }

    @Override
    public ULong component4() {
        return getCreateUserId();
    }

    @Override
    public LocalDateTime component5() {
        return getLastModifyTime();
    }

    @Override
    public ULong component6() {
        return getLastModifyUserId();
    }

    @Override
    public ULong component7() {
        return getIsDeleted();
    }

    @Override
    public ULong value1() {
        return getMenuCoreId();
    }

    @Override
    public ULong value2() {
        return getMenuId();
    }

    @Override
    public LocalDateTime value3() {
        return getCreateTime();
    }

    @Override
    public ULong value4() {
        return getCreateUserId();
    }

    @Override
    public LocalDateTime value5() {
        return getLastModifyTime();
    }

    @Override
    public ULong value6() {
        return getLastModifyUserId();
    }

    @Override
    public ULong value7() {
        return getIsDeleted();
    }

    @Override
    public MenuCoreRecord value1(ULong value) {
        setMenuCoreId(value);
        return this;
    }

    @Override
    public MenuCoreRecord value2(ULong value) {
        setMenuId(value);
        return this;
    }

    @Override
    public MenuCoreRecord value3(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public MenuCoreRecord value4(ULong value) {
        setCreateUserId(value);
        return this;
    }

    @Override
    public MenuCoreRecord value5(LocalDateTime value) {
        setLastModifyTime(value);
        return this;
    }

    @Override
    public MenuCoreRecord value6(ULong value) {
        setLastModifyUserId(value);
        return this;
    }

    @Override
    public MenuCoreRecord value7(ULong value) {
        setIsDeleted(value);
        return this;
    }

    @Override
    public MenuCoreRecord values(ULong value1, ULong value2, LocalDateTime value3, ULong value4, LocalDateTime value5, ULong value6, ULong value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MenuCoreRecord
     */
    public MenuCoreRecord() {
        super(MenuCore.MENU_CORE);
    }

    /**
     * Create a detached, initialised MenuCoreRecord
     */
    public MenuCoreRecord(ULong menuCoreId, ULong menuId, LocalDateTime createTime, ULong createUserId, LocalDateTime lastModifyTime, ULong lastModifyUserId, ULong isDeleted) {
        super(MenuCore.MENU_CORE);

        set(0, menuCoreId);
        set(1, menuId);
        set(2, createTime);
        set(3, createUserId);
        set(4, lastModifyTime);
        set(5, lastModifyUserId);
        set(6, isDeleted);
    }
}
