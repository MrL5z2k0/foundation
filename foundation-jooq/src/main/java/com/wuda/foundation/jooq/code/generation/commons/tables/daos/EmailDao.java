/*
 * This file is generated by jOOQ.
 */
package com.wuda.foundation.jooq.code.generation.commons.tables.daos;


import com.wuda.foundation.jooq.code.generation.commons.tables.Email;
import com.wuda.foundation.jooq.code.generation.commons.tables.records.EmailRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UByte;
import org.jooq.types.ULong;


/**
 * email信息
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmailDao extends DAOImpl<EmailRecord, com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Email, ULong> {

    /**
     * Create a new EmailDao without any configuration
     */
    public EmailDao() {
        super(Email.EMAIL, com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Email.class);
    }

    /**
     * Create a new EmailDao with an attached configuration
     */
    public EmailDao(Configuration configuration) {
        super(Email.EMAIL, com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Email.class, configuration);
    }

    @Override
    public ULong getId(com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Email object) {
        return object.getEmailId();
    }

    /**
     * Fetch records that have <code>email_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Email> fetchRangeOfEmailId(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(Email.EMAIL.EMAIL_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>email_id IN (values)</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Email> fetchByEmailId(ULong... values) {
        return fetch(Email.EMAIL.EMAIL_ID, values);
    }

    /**
     * Fetch a unique record that has <code>email_id = value</code>
     */
    public com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Email fetchOneByEmailId(ULong value) {
        return fetchOne(Email.EMAIL.EMAIL_ID, value);
    }

    /**
     * Fetch records that have <code>address BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Email> fetchRangeOfAddress(String lowerInclusive, String upperInclusive) {
        return fetchRange(Email.EMAIL.ADDRESS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>address IN (values)</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Email> fetchByAddress(String... values) {
        return fetch(Email.EMAIL.ADDRESS, values);
    }

    /**
     * Fetch records that have <code>state BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Email> fetchRangeOfState(UByte lowerInclusive, UByte upperInclusive) {
        return fetchRange(Email.EMAIL.STATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>state IN (values)</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Email> fetchByState(UByte... values) {
        return fetch(Email.EMAIL.STATE, values);
    }

    /**
     * Fetch records that have <code>create_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Email> fetchRangeOfCreateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Email.EMAIL.CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Email> fetchByCreateTime(LocalDateTime... values) {
        return fetch(Email.EMAIL.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>create_user_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Email> fetchRangeOfCreateUserId(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(Email.EMAIL.CREATE_USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_user_id IN (values)</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Email> fetchByCreateUserId(ULong... values) {
        return fetch(Email.EMAIL.CREATE_USER_ID, values);
    }

    /**
     * Fetch records that have <code>last_modify_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Email> fetchRangeOfLastModifyTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Email.EMAIL.LAST_MODIFY_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_modify_time IN (values)</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Email> fetchByLastModifyTime(LocalDateTime... values) {
        return fetch(Email.EMAIL.LAST_MODIFY_TIME, values);
    }

    /**
     * Fetch records that have <code>last_modify_user_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Email> fetchRangeOfLastModifyUserId(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(Email.EMAIL.LAST_MODIFY_USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_modify_user_id IN (values)</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Email> fetchByLastModifyUserId(ULong... values) {
        return fetch(Email.EMAIL.LAST_MODIFY_USER_ID, values);
    }

    /**
     * Fetch records that have <code>is_deleted BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Email> fetchRangeOfIsDeleted(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(Email.EMAIL.IS_DELETED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_deleted IN (values)</code>
     */
    public List<com.wuda.foundation.jooq.code.generation.commons.tables.pojos.Email> fetchByIsDeleted(ULong... values) {
        return fetch(Email.EMAIL.IS_DELETED, values);
    }
}
